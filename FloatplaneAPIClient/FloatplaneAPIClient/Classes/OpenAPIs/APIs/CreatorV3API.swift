//
// CreatorV3API.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Vapor
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CreatorV3API {

    /**
     Get Creator
     GET /api/v3/creator/info
     Retrieve detailed information about a specific creator.
     - API Key:
       - type: apiKey sails.sid 
       - name: CookieAuth
     - parameter id: (query) The GUID of the creator being searched. 
     - returns: `EventLoopFuture` of `ClientResponse` 
     */
    open class func getCreatorRaw(id: String, headers: HTTPHeaders = FloatplaneAPIClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<ClientResponse> {
        let localVariablePath = "/api/v3/creator/info"
        let localVariableURLString = FloatplaneAPIClientAPI.basePath + localVariablePath

        guard let localVariableApiClient = Configuration.apiClient else {
            fatalError("Configuration.apiClient is not set.")
        }

        return localVariableApiClient.send(.GET, headers: headers, to: URI(string: localVariableURLString)) { localVariableRequest in
            try Configuration.apiWrapper(&localVariableRequest)
            
            struct QueryParams: Content {
                var id: String

                enum CodingKeys: String, CodingKey {
                    case id = "id"
                }
            }
            try localVariableRequest.query.encode(QueryParams(id: id))
            
            try beforeSend(&localVariableRequest)
        }
    }

    public enum GetCreator {
        case http200(value: CreatorModelV3, raw: ClientResponse)
        case http400(value: ErrorModel, raw: ClientResponse)
        case http401(value: ErrorModel, raw: ClientResponse)
        case http403(value: ErrorModel, raw: ClientResponse)
        case http404(value: ErrorModel, raw: ClientResponse)
        case http429(raw: ClientResponse)
        case http0(value: ErrorModel, raw: ClientResponse)
    }

    /**
     Get Creator
     GET /api/v3/creator/info
     Retrieve detailed information about a specific creator.
     - API Key:
       - type: apiKey sails.sid 
       - name: CookieAuth
     - parameter id: (query) The GUID of the creator being searched. 
     - returns: `EventLoopFuture` of `GetCreator` 
     */
    open class func getCreator(id: String, headers: HTTPHeaders = FloatplaneAPIClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<GetCreator> {
        return getCreatorRaw(id: id, headers: headers, beforeSend: beforeSend).flatMapThrowing { response -> GetCreator in
            switch response.status.code {
            case 200:
                return .http200(value: try response.content.decode(CreatorModelV3.self, using: Configuration.contentConfiguration.requireDecoder(for: CreatorModelV3.defaultContentType)), raw: response)
            case 400:
                return .http400(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 401:
                return .http401(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 403:
                return .http403(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 404:
                return .http404(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 429:
                return .http429(raw: response)
            default:
                return .http0(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            }
        }
    }

    /**
     Get Creator By Name
     GET /api/v3/creator/named
     Retrieve detailed information on one or more creators on Floatplane.
     - API Key:
       - type: apiKey sails.sid 
       - name: CookieAuth
     - parameter creatorURL: (query) The `urlname`(s) of the creator(s) to be retrieved. See `CreatorModelV3`. 
     - returns: `EventLoopFuture` of `ClientResponse` 
     */
    open class func getCreatorByNameRaw(creatorURL: [String], headers: HTTPHeaders = FloatplaneAPIClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<ClientResponse> {
        let localVariablePath = "/api/v3/creator/named"
        let localVariableURLString = FloatplaneAPIClientAPI.basePath + localVariablePath

        guard let localVariableApiClient = Configuration.apiClient else {
            fatalError("Configuration.apiClient is not set.")
        }

        return localVariableApiClient.send(.GET, headers: headers, to: URI(string: localVariableURLString)) { localVariableRequest in
            try Configuration.apiWrapper(&localVariableRequest)
            
            struct QueryParams: Content {
                var creatorURL: [String]

                enum CodingKeys: String, CodingKey {
                    case creatorURL = "creatorURL"
                }
            }
            try localVariableRequest.query.encode(QueryParams(creatorURL: creatorURL))
            
            try beforeSend(&localVariableRequest)
        }
    }

    public enum GetCreatorByName {
        case http200(value: [CreatorModelV3], raw: ClientResponse)
        case http400(value: ErrorModel, raw: ClientResponse)
        case http401(value: ErrorModel, raw: ClientResponse)
        case http403(value: ErrorModel, raw: ClientResponse)
        case http404(value: ErrorModel, raw: ClientResponse)
        case http429(raw: ClientResponse)
        case http0(value: ErrorModel, raw: ClientResponse)
    }

    /**
     Get Creator By Name
     GET /api/v3/creator/named
     Retrieve detailed information on one or more creators on Floatplane.
     - API Key:
       - type: apiKey sails.sid 
       - name: CookieAuth
     - parameter creatorURL: (query) The `urlname`(s) of the creator(s) to be retrieved. See `CreatorModelV3`. 
     - returns: `EventLoopFuture` of `GetCreatorByName` 
     */
    open class func getCreatorByName(creatorURL: [String], headers: HTTPHeaders = FloatplaneAPIClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<GetCreatorByName> {
        return getCreatorByNameRaw(creatorURL: creatorURL, headers: headers, beforeSend: beforeSend).flatMapThrowing { response -> GetCreatorByName in
            switch response.status.code {
            case 200:
                return .http200(value: try response.content.decode([CreatorModelV3].self, using: Configuration.contentConfiguration.requireDecoder(for: [CreatorModelV3].defaultContentType)), raw: response)
            case 400:
                return .http400(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 401:
                return .http401(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 403:
                return .http403(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 404:
                return .http404(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 429:
                return .http429(raw: response)
            default:
                return .http0(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            }
        }
    }

    /**
     Get Creators
     GET /api/v3/creator/list
     Retrieve and search for all creators on Floatplane. Useful for creator discovery and filtering.
     - API Key:
       - type: apiKey sails.sid 
       - name: CookieAuth
     - parameter search: (query) Optional search string for finding particular creators on the platform. 
     - returns: `EventLoopFuture` of `ClientResponse` 
     */
    open class func getCreatorsRaw(search: String, headers: HTTPHeaders = FloatplaneAPIClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<ClientResponse> {
        let localVariablePath = "/api/v3/creator/list"
        let localVariableURLString = FloatplaneAPIClientAPI.basePath + localVariablePath

        guard let localVariableApiClient = Configuration.apiClient else {
            fatalError("Configuration.apiClient is not set.")
        }

        return localVariableApiClient.send(.GET, headers: headers, to: URI(string: localVariableURLString)) { localVariableRequest in
            try Configuration.apiWrapper(&localVariableRequest)
            
            struct QueryParams: Content {
                var search: String

                enum CodingKeys: String, CodingKey {
                    case search = "search"
                }
            }
            try localVariableRequest.query.encode(QueryParams(search: search))
            
            try beforeSend(&localVariableRequest)
        }
    }

    public enum GetCreators {
        case http200(value: [CreatorModelV3], raw: ClientResponse)
        case http400(value: ErrorModel, raw: ClientResponse)
        case http401(value: ErrorModel, raw: ClientResponse)
        case http403(value: ErrorModel, raw: ClientResponse)
        case http404(value: ErrorModel, raw: ClientResponse)
        case http429(raw: ClientResponse)
        case http0(value: ErrorModel, raw: ClientResponse)
    }

    /**
     Get Creators
     GET /api/v3/creator/list
     Retrieve and search for all creators on Floatplane. Useful for creator discovery and filtering.
     - API Key:
       - type: apiKey sails.sid 
       - name: CookieAuth
     - parameter search: (query) Optional search string for finding particular creators on the platform. 
     - returns: `EventLoopFuture` of `GetCreators` 
     */
    open class func getCreators(search: String, headers: HTTPHeaders = FloatplaneAPIClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<GetCreators> {
        return getCreatorsRaw(search: search, headers: headers, beforeSend: beforeSend).flatMapThrowing { response -> GetCreators in
            switch response.status.code {
            case 200:
                return .http200(value: try response.content.decode([CreatorModelV3].self, using: Configuration.contentConfiguration.requireDecoder(for: [CreatorModelV3].defaultContentType)), raw: response)
            case 400:
                return .http400(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 401:
                return .http401(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 403:
                return .http403(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 404:
                return .http404(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 429:
                return .http429(raw: response)
            default:
                return .http0(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            }
        }
    }

    /**
     List Creator Channels
     GET /api/v3/creator/channels/list
     Retrieves a list of channels within the given creator(s).
     - API Key:
       - type: apiKey sails.sid 
       - name: CookieAuth
     - parameter ids: (query) The ids of the creator(s) from which to search for channels. 
     - returns: `EventLoopFuture` of `ClientResponse` 
     */
    open class func listCreatorChannelsV3Raw(ids: [String], headers: HTTPHeaders = FloatplaneAPIClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<ClientResponse> {
        let localVariablePath = "/api/v3/creator/channels/list"
        let localVariableURLString = FloatplaneAPIClientAPI.basePath + localVariablePath

        guard let localVariableApiClient = Configuration.apiClient else {
            fatalError("Configuration.apiClient is not set.")
        }

        return localVariableApiClient.send(.GET, headers: headers, to: URI(string: localVariableURLString)) { localVariableRequest in
            try Configuration.apiWrapper(&localVariableRequest)
            
            struct QueryParams: Content {
                var ids: [String]

                enum CodingKeys: String, CodingKey {
                    case ids = "ids"
                }
            }
            try localVariableRequest.query.encode(QueryParams(ids: ids))
            
            try beforeSend(&localVariableRequest)
        }
    }

    public enum ListCreatorChannelsV3 {
        case http200(value: [ChannelModel], raw: ClientResponse)
        case http400(value: ErrorModel, raw: ClientResponse)
        case http401(value: ErrorModel, raw: ClientResponse)
        case http403(value: ErrorModel, raw: ClientResponse)
        case http404(value: ErrorModel, raw: ClientResponse)
        case http429(raw: ClientResponse)
        case http0(value: ErrorModel, raw: ClientResponse)
    }

    /**
     List Creator Channels
     GET /api/v3/creator/channels/list
     Retrieves a list of channels within the given creator(s).
     - API Key:
       - type: apiKey sails.sid 
       - name: CookieAuth
     - parameter ids: (query) The ids of the creator(s) from which to search for channels. 
     - returns: `EventLoopFuture` of `ListCreatorChannelsV3` 
     */
    open class func listCreatorChannelsV3(ids: [String], headers: HTTPHeaders = FloatplaneAPIClientAPI.customHeaders, beforeSend: (inout ClientRequest) throws -> () = { _ in }) -> EventLoopFuture<ListCreatorChannelsV3> {
        return listCreatorChannelsV3Raw(ids: ids, headers: headers, beforeSend: beforeSend).flatMapThrowing { response -> ListCreatorChannelsV3 in
            switch response.status.code {
            case 200:
                return .http200(value: try response.content.decode([ChannelModel].self, using: Configuration.contentConfiguration.requireDecoder(for: [ChannelModel].defaultContentType)), raw: response)
            case 400:
                return .http400(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 401:
                return .http401(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 403:
                return .http403(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 404:
                return .http404(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            case 429:
                return .http429(raw: response)
            default:
                return .http0(value: try response.content.decode(ErrorModel.self, using: Configuration.contentConfiguration.requireDecoder(for: ErrorModel.defaultContentType)), raw: response)
            }
        }
    }
}
