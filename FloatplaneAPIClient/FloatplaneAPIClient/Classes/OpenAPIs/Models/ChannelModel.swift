//
// ChannelModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif
import Vapor

public struct ChannelModel: Content, Hashable {

    public var id: String
    public var creator: String
    public var title: String
    /** Shown in the browser URL. */
    public var urlname: String
    public var about: String
    public var order: Int?
    public var cover: ImageModel?
    public var card: ImageModel?
    public var icon: ImageModel
    public var socialLinks: [String: String]?

    public init(id: String, creator: String, title: String, urlname: String, about: String, order: Int? = nil, cover: ImageModel?, card: ImageModel?, icon: ImageModel, socialLinks: [String: String]? = nil) {
        self.id = id
        self.creator = creator
        self.title = title
        self.urlname = urlname
        self.about = about
        self.order = order
        self.cover = cover
        self.card = card
        self.icon = icon
        self.socialLinks = socialLinks
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case creator
        case title
        case urlname
        case about
        case order
        case cover
        case card
        case icon
        case socialLinks
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(creator, forKey: .creator)
        try container.encode(title, forKey: .title)
        try container.encode(urlname, forKey: .urlname)
        try container.encode(about, forKey: .about)
        try container.encodeIfPresent(order, forKey: .order)
        try container.encode(cover, forKey: .cover)
        try container.encode(card, forKey: .card)
        try container.encode(icon, forKey: .icon)
        try container.encodeIfPresent(socialLinks, forKey: .socialLinks)
    }
}

